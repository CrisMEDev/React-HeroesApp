{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","components/ui/Navbar.js","components/heroes/HeroCard.js","data/heroes.js","components/heroes/HeroesList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroesScreen.js","selectors/getHeroById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","setUser","name","email","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","replace","Navbar","user","useHistory","to","activeClassName","exact","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","heroes","HeroesList","publisher","useMemo","includes","Error","filter","heroe","getHeroesByPublisher","map","hero","MarvelScreen","HeroesScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","formValuesState","setFormValuesState","handleInputChange","target","value","useForm","searchHero","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","event","preventDefault","trim","placeholder","onChange","autoComplete","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"0JAGaA,EAAcC,0B,OCDdC,EACF,eADEA,EAED,gBCDCC,EAAc,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,OAASA,EAAOC,MACZ,KAAKJ,EACD,OAAO,2BACAG,EAAOE,SADd,IAEIC,QAAQ,IAGhB,KAAKN,EACD,MAAO,CACHM,QAAQ,GAGhB,QACI,OAAOJ,I,qBCbbK,EAAU,CACZH,KAAMJ,EACNK,QAAS,CACLG,KAAM,WACNC,MAAO,yBAIFC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAElBC,EAAaC,qBAAYf,GAAzBc,SAYR,OACI,sBAAKE,UAAU,iBAAf,UACI,8CACA,uBAEA,wBACIA,UAAU,kBACVC,QAjBQ,WAGhB,IAAMC,EAAWC,aAAaC,QAAQ,aAAe,IAErDN,EAAUL,GACVI,EAAQQ,QAAQH,IASZ,uBC1BCI,EAAS,WAElB,MAA2BP,qBAAWf,GAA9BuB,EAAR,EAAQA,KAAMT,EAAd,EAAcA,SAERD,EAAUW,cAShB,OACI,sBAAKR,UAAU,8CAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACVS,GAAG,IAFP,0BAOA,qBAAKT,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACIU,gBAAgB,SAChBV,UAAU,oBACVW,OAAK,EACLF,GAAG,UAJP,oBASA,cAAC,IAAD,CACIC,gBAAgB,SAChBV,UAAU,oBACVW,OAAK,EACLF,GAAG,MAJP,gBASA,cAAC,IAAD,CACIC,gBAAgB,SAChBV,UAAU,oBACVW,OAAK,EACLF,GAAG,UAJP,yBAWR,qBAAKT,UAAU,wDAAf,SACI,qBAAIA,UAAU,qBAAd,UAEI,qBACIA,UAAU,8BADd,SAGMO,EAAKb,OAGX,wBACIM,UAAU,6BACVC,QA5DC,WAEjBJ,EAAQQ,QAAQ,UAEhBP,EAAS,CAAER,KAAMJ,KAsDL,6BCnEP0B,EAAW,SAAC,GAKH,IAJlBC,EAIiB,EAJjBA,GACAC,EAGiB,EAHjBA,UACAC,EAEiB,EAFjBA,UACAC,EACiB,EADjBA,iBACAC,EAAiB,EAAjBA,WACA,OACI,sBAAKjB,UAAU,UAAUkB,MAAO,CAAEC,SAAU,KAA5C,UACI,qBAAKnB,UAAU,WAAf,SACI,qBACAoB,IAAG,0BAAqBP,EAArB,QACHb,UAAU,0BACVqB,IAAKP,MAET,qBAAKd,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4Bc,IAC5B,mBAAGd,UAAU,YAAb,SAA0Be,IAGpBA,IAAcE,GAEhB,mBAAGjB,UAAU,YAAb,SAA2BiB,IAG/B,mBAAGjB,UAAU,YAAb,SAAyB,uBAAOA,UAAU,aAAjB,SAAgCgB,MAEzD,cAAC,IAAD,CACIhB,UAAU,uBACVS,GAAE,gBAAaI,GAFnB,+BC9BPS,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBC1JRC,EAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEnBF,EAASG,mBAAQ,kBCLS,SAAED,GAIlC,IAFwB,CAAC,YAAa,iBAEhBE,SAAUF,GAC5B,MAAM,IAAIG,MAAJ,qBAAyBH,EAAzB,qBAEV,OAAOF,EAAOM,QAAQ,SAAEC,GAAF,OAAaA,EAAML,YAAcA,KDF1BM,CAAsBN,KAAa,CAAEA,IAGlE,OACI,qBAAKxB,UAAU,6CAAf,SAEQsB,EAAOS,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,eAA4BA,GAAbA,EAAKnB,UEX3BoB,EAAe,WACxB,OACI,qCACI,+CACA,uBAEA,cAAC,EAAD,CAAaT,UAAU,sBCJtBU,EAAe,SAAC,GAAiB,IAAfrC,EAAc,EAAdA,QAEnBsC,EAAYC,cAAZD,QAEFH,EAAOP,mBAAQ,kBCPKZ,EDOesB,ECLlCb,EAAOe,MAAM,SAAER,GAAF,OAAcA,EAAMhB,KAAOA,KAFvB,IAAEA,IDO0B,CAAEsB,IAGtD,IAAMH,EAAO,OAAO,cAAC,IAAD,CAAUvB,GAAG,MAEjC,IAOIK,EAKAkB,EALAlB,UACAU,EAIAQ,EAJAR,UACAT,EAGAiB,EAHAjB,UACAC,EAEAgB,EAFAhB,iBACAC,EACAe,EADAf,WAGJ,OACI,sBAAKjB,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBACIA,UAAU,kDACVqB,IAAMP,EACNM,IAAG,2BAAuBe,EAAvB,YAGX,sBAAKnC,UAAU,QAAf,UAEI,6BAAMc,IACN,qBAAId,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,cAAiC,4CAAoBe,KACrD,qBAAIf,UAAU,kBAAd,cAAiC,4CAAoBwB,KACrD,qBAAIxB,UAAU,kBAAd,cAAiC,mDAA2BgB,QAGhE,4CACA,4BAAIC,IAEJ,wBACIjB,UAAU,uBACVC,QArCK,WAEZJ,EAAQyC,QAAU,EAAIzC,EAAQ0C,KAAK,KACnC1C,EAAQ2C,UAgCL,2BE9CHC,EAAW,WACpB,OACI,qCACI,2CACA,uBAEA,cAAC,EAAD,CAAYjB,UAAU,kB,yBCArBkB,EAAe,SAAC,GAAiB,IAAf7C,EAAc,EAAdA,QAErB8C,EAAWC,cAEjB,EAAmBC,IAAYC,MAAMH,EAASI,QAAtCC,SAAR,MAAY,GAAZ,EAGA,ECdmB,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA8CC,mBAASD,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAMMC,EAAoB,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAI1BF,EAAmB,2BACZD,GADW,kBAEZG,EAAO5D,KAAQ4D,EAAOC,UAMhC,MAAO,CAAEJ,EAAiBE,EAhBZ,WACVD,EAAoBH,KDS8BO,CADlC,CAAEC,WAAYT,IAClC,mBAAQG,EAAR,KAAyBE,EAAzB,KAEQI,GAFR,KAEuBN,EAAfM,YAGFC,EAAiBjC,mBAAQ,kBEnBJ,WAAkB,IAAhB/B,EAAe,uDAAR,GAEpC,MAAc,KAATA,EAAqB,IAE1BA,EAAOA,EAAKiE,oBAELrC,EAAOM,QAAQ,SAAAI,GAAI,OAAIA,EAAKlB,UAAU6C,oBAAoBjC,SAAUhC,OFatCkE,CAAiBZ,KAAK,CAAEA,IAW7D,OACI,gCACI,+CACA,uBAEA,sBAAKhD,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6CACA,uBAEA,uBAAM6D,SAlBD,SAACC,GAClBA,EAAMC,iBAEDN,EAAWO,OAAO1B,QAAU,GAEjCzC,EAAQ0C,KAAR,aAAoBkB,KAaR,UACI,uBACInE,KAAK,OACL2E,YAAY,iBACZjE,UAAU,eACVN,KAAK,aACL6D,MAAOE,EACPS,SAAUb,EACVc,aAAa,QAGjB,wBACI7E,KAAK,SACLU,UAAU,oCAFd,0BASR,sBAAKA,UAAU,QAAf,UACI,yCACA,uBAGY,KAANgD,GACE,qBAAKhD,UAAU,mBAAf,2BAMI,KAANgD,GAAsC,IAA1BU,EAAepB,QACzB,sBAAKtC,UAAU,qBAAf,qCAC8BgD,KAMlCU,EAAe3B,KAAK,SAACC,GAAD,OAChB,cAAC,EAAD,eAESA,GADCA,EAAKnB,iBG3E9BuD,EAAkB,WAC3B,OACI,qCAEI,cAAC,EAAD,IAEA,qBAAKpE,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOW,OAAK,EAAC0D,KAAK,UAAUC,UAAYrC,IAGxC,cAAC,IAAD,CAAOtB,OAAK,EAAC0D,KAAK,iBAAiBC,UAAYpC,IAC/C,cAAC,IAAD,CAAOvB,OAAK,EAAC0D,KAAK,MAAMC,UAAY7B,IACpC,cAAC,IAAD,CAAO9B,OAAK,EAAC0D,KAAK,UAAUC,UAAY5B,IAExC,cAAC,IAAD,CAAUjC,GAAG,qB,0CCpBpB8D,EAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,iBAKF,OAFAvE,aAAawE,QAAS,WAAYD,EAAK/B,SAASiC,UAG5C,cAAC,IAAD,2BAAYF,GAAZ,IACIJ,UAAY,SAACO,GAAD,OACNL,EACI,cAACC,EAAD,eAAgBI,IAChB,cAAC,IAAD,CAAUpE,GAAG,gB,kCCdtBqE,EAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,iBAIF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAACO,GAAD,OACLL,EAEG,cAAC,IAAD,CAAU/D,GAAG,MADb,cAACgE,EAAD,eAAgBI,SCJzBE,EAAY,WAErB,IAAQxE,EAASR,qBAAWf,GAApBuB,KAER,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaI,OAAK,EAAC6D,gBAAiBjE,EAAKf,OAAQ6E,KAAK,SAASC,UAAY1E,IAD/E,IAEI,cAAC,EAAD,CAAc4E,gBAAiBjE,EAAKf,OAAQ6E,KAAK,IAAIC,UAAYF,YCf/EY,EAAO,WACT,OAAOC,KAAKnC,MAAM3C,aAAaC,QAAQ,UAAY,CAC/CZ,QAAQ,IAIH0F,EAAY,WAErB,MAA2BC,qBAAWhG,EAAa,GAAI6F,GAAvD,mBAAQzE,EAAR,KAAeT,EAAf,KAQA,OANAsF,qBAAU,WAENjF,aAAawE,QAAQ,OAAQM,KAAKI,UAAU9E,MAE7C,CAACA,IAGA,cAACvB,EAAYsG,SAAb,CAAsB/B,MAAO,CAAEhD,OAAMT,YAArC,SACI,cAAC,EAAD,OCpBZyF,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ded85b6.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\nexport const AuthContext = createContext();\r\n","\r\n\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout'\r\n} \r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        \r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nconst setUser = {\r\n    type: types.login,\r\n    payload: {\r\n        name: 'Cristian',\r\n        email: 'cr15moresp@gmail.com'\r\n    }\r\n};\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const handleLogin = () => {\r\n        // history.push('/');\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        \r\n        dispatch( setUser );\r\n        history.replace(lastPath);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user, dispatch } = useContext(AuthContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n        \r\n        dispatch({ type: types.logout });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ms-auto\">\r\n\r\n                    <div\r\n                        className=\"nav-item nav-link text-info\"\r\n                    >\r\n                        { user.name }\r\n                    </div>\r\n\r\n                    <button \r\n                        className=\"btn nav-item nav-link me-4\" \r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters }) => {\r\n    return (\r\n        <div className=\"row g-4\" style={{ maxWidth: 540 }}>\r\n            <div className=\"col-md-6\">\r\n                <img\r\n                src={`./assets/heroes/${id}.jpg`}\r\n                className=\"img-fluid rounded-start\"\r\n                alt={superhero} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{superhero}</h5>\r\n                    <p className=\"card-text\">{alter_ego}</p>\r\n\r\n                    {\r\n                        ( alter_ego !== characters )\r\n                        && \r\n                        <p className=\"card-text\">{ characters }</p>\r\n                    }\r\n\r\n                    <p className=\"card-text\"><small className=\"text-muted\">{ first_appearance }</small></p>\r\n\r\n                    <Link\r\n                        className=\"btn btn-outline-dark\"\r\n                        to={ `/hero/${ id }` }\r\n                    >\r\n                        About...\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React, { useMemo } from 'react'\r\n\r\nimport { HeroCard } from './HeroCard';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\r\n\r\nexport const HeroesList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ]);\r\n    // const heroes = getHeroesByPublisher(publisher);\r\n\r\n    return (\r\n        <div className=\"row gy-8 animate__animated animate__fadeIn\" >\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard key={hero.id} {...hero} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if ( !validPublishers.includes( publisher ) )\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\r\n\r\n    return heroes.filter( ( heroe ) => heroe.publisher === publisher );\r\n\r\n}\r\n","import React from 'react';\r\nimport { HeroesList } from '../heroes/HeroesList';\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroesList  publisher=\"Marvel Comics\" />\r\n        </>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\n\r\nimport { getHeroeById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroesScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroeById( heroeId ), [ heroeId ]);\r\n    // const hero = getHeroeById( heroeId );\r\n\r\n    if ( !hero ) return <Redirect to=\"/\" />;\r\n\r\n    const handleReturn = () => {\r\n\r\n        if ( history.length <= 2 ) history.push('/');\r\n        else history.goBack();\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    className=\"img-thumbnail animate__animated animate__rollIn\"\r\n                    alt={ superhero }\r\n                    src={`../assets/heroes/${ heroeId }.jpg`} />\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n\r\n                <h3>{ superhero }</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b>Alter ego: </b>{ alter_ego }</li>\r\n                    <li className=\"list-group-item\"> <b>Publisher: </b>{ publisher }</li>\r\n                    <li className=\"list-group-item\"> <b>First appearance: </b>{ first_appearance }</li>\r\n                </ul>\r\n\r\n                <h5>Characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroeById = ( id ) => {\r\n\r\n    return heroes.find( ( heroe ) =>  heroe.id === id );\r\n\r\n}","import React from 'react';\r\nimport { HeroesList } from '../heroes/HeroesList';\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroesList publisher=\"DC Comics\" />\r\n        </>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const initialForm = { searchHero: q };\r\n    const [ formValuesState, handleInputChange, reset ] = useForm( initialForm );\r\n\r\n    const { searchHero } = formValuesState;\r\n\r\n    // Use memo usado para que no se renderice con cada caracter tecleado\r\n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [ q ]);\r\n    // const heroesFiltered = getHeroesByName( searchHero );\r\n\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        if ( searchHero.trim().length <= 3 ) return;\r\n\r\n        history.push(`?q=${ searchHero }`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchHero\"\r\n                            value={searchHero}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\"\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 w-100 btn-outline-primary\"\r\n                        >\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        ( q === '' )\r\n                        &&  <div className=\"alert alert-info\">\r\n                                Search a hero\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        ( q !== '' && heroesFiltered.length === 0 )\r\n                        &&  <div className=\"alert alert-danger\">\r\n                                There is no a hero with { q }\r\n                            </div>\r\n                    }\r\n\r\n\r\n                    {\r\n                        heroesFiltered.map( (hero) => (\r\n                            <HeroCard\r\n                                key={ hero.id }\r\n                                { ...hero }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [formValuesState, setFormValuesState] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setFormValuesState( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {   // Se extrae el target del event\r\n\r\n        // console.log(event.target.name);\r\n        // console.log(event.target.value);\r\n        setFormValuesState({\r\n            ...formValuesState,\r\n            [ target.name ]: target.value   // Se establece el name del input con el valor que se escribe\r\n                                            // en el input requerido\r\n        });\r\n\r\n    }\r\n\r\n    return [ formValuesState, handleInputChange, reset ];\r\n\r\n}","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByName = ( name = '' ) => {\r\n\r\n    if ( name === '' ) return [];\r\n\r\n    name = name.toLocaleLowerCase();\r\n    \r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ) );\r\n\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { HeroesScreen } from '../components/heroes/HeroesScreen';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-3\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n\r\n                    {/* Componente que recibe un argumento 'heroeId' por la url */}\r\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroesScreen } />\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // recupera el ultimo path visitado para mostrarselo al user\r\n    localStorage.setItem( 'lastPath', rest.location.pathname );\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        \r\n        />\r\n    );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/\" />\r\n            )}\r\n        \r\n        />\r\n    );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact isAuthenticated={user.logged} path=\"/login\" component={ LoginScreen } />,\r\n                    <PrivateRoute isAuthenticated={user.logged} path=\"/\" component={ DashboardRoutes } />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\n\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {\r\n        logged: false\r\n    };\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [ user , dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        \r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n    }, [user]);\r\n    \r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}